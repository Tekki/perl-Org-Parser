#!/usr/bin/perl

# a simple example script to dump org structure

# workaround for dzil
package dump_org_structure;

use 5.010;
use strict;
use warnings;
use Log::Any qw($log);

use String::Escape qw(elide printable);
use Org::Parser;

my $doc = Org::Parser->new->parse([<>]);
dump_element($doc);

sub dump_element {
    my ($el, $indent_level) = @_;
    $indent_level //= 0;

    my $line = "  " x $indent_level;
    my $type = ref($el);
    $type =~ s/^Org::(?:Element::)?//;
    $line .= "$type:";
    # per-element important info
    if ($type eq 'Headline') {
        $line .= " l=".$el->level;
        $line .= ",todo=".$el->todo_state if $el->todo_state;
    } elsif ($type eq 'ListItem') {
        $line .= " ".$el->bullet;
        $line .= " l=".length($el->indent);
    } elsif ($type eq 'Text') {
        $line .= " ".$el->style if $el->style;
    } elsif ($type =~ /^(Schedule)?Timestamp$/) {
        $line .= " dt=".$el->datetime;
    }
    unless ($el->children) {
        $line .= " \"".
            printable elide($el->_str // $el->as_string, 80-length($line)-2);
    }
    say $line, "\"";

    if ($el->children) {
        dump_element($_, $indent_level+1) for @{ $el->children };
    }
}
